#/bash/bin
DATA_DIR=$1
VERSION=$2

# Convert the audio files into pickle files.
python lib/convert_audio_to_pkl.py -data_dir $DATA_DIR

# Split train data and validation data.
python lib/split_train_valid.py -data_dir $DATA_DIR

cd run

# After running the preprocessing, the following files are generated in demo folder.
# demo.train.pt: serialized pytorch file containing training data.
# demo.valid.pt: serialized pytorch file containing validation data.
# demo.vocab.pkl: serialized pickle file contraining vocabulary data.
python preprocess.py -data_dir ../$DATA_DIR -train_path ../$DATA_DIR/train.txt -valid_path ../$DATA_DIR/valid.txt -save_data ../$DATA_DIR/$VERSION

# The main train command is quite simple.
# Minimally it takes a data file and a save file.
# If you want to train on GPU, you need to set, as an example: CUDA_VISIBLE_DEVICES=1,3 -gpu_ranks 0 1 to use (say) GPU 1 and 3 on this node only.
# The demo-model_best.pt file is generated in demo folder, which is the serialized pytorch file containing model parameters, optimizer parameters, vocabulary, the score of validation set and the number of epoch.
python train.py -data ../$DATA_DIR/$VERSION -save_model ../$DATA_DIR/$VERSION-model
